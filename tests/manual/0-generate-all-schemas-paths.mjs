import { SchemaImporter } from "../../src/index.mjs"
import path from "path"
import fs from 'fs'


const config = {
    'folders': [ 
        [ 'v1.1.1', './../schemas/v1.1.1/' ],
        [ 'v1.2.0', './../schemas/v1.2.0/' ],
    ]
}
const { folders } = config


const all_raw = await Promise.all( 
    folders
        .map( async ( [ version, schemaRootFolder ] ) => {
            const arrayOfSchemas = await SchemaImporter
                .loadFromFolder( {
                    schemaRootFolder,
                    excludeSchemasWithImports: true,
                    excludeSchemasWithRequiredServerParams: false,
                    addAdditionalMetaData: true
                } )
            return arrayOfSchemas
                .map( ( schemaItem ) => {
                    const { absolutePath } = schemaItem
                    const relativePath = path.relative( path.resolve( './' ), absolutePath )
                    const modulImportPath = 'schemaimporter/' + relativePath
                    const internalImport = './../' + relativePath

                    const result = {
                        version,
                        relativePath,
                        modulImportPath,
                        internalImport,
                        ...schemaItem
                    }
                    delete result['absolutePath']
                    delete result['schema']
                    return result
                } )

        } )
    )
const all = all_raw
    .flat()
    .sort( (  a, b ) => {
        if( a.version < b.version ) { return -1 }
        if( a.version > b.version ) { return 1 }
        if( a.folderName < b.folderName ) { return -1 }
        if( a.folderName > b.folderName ) { return 1 }
        if( a.relativePath < b.relativePath ) { return -1 }
        if( a.relativePath > b.relativePath ) { return 1 }
        return 0
    } )

let content = ''
content += '// This file is generated by running the script: \n'
content += `const allSchemaPaths = ${JSON.stringify( all, null, 4 )}\n`
content += '\n\n'
content += `export { allSchemaPaths }\n`


fs.writeFileSync(
    './src/data/all-schema-paths.mjs',
    content,
    'utf-8'
)